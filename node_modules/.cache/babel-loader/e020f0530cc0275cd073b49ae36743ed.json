{"ast":null,"code":"import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const cartRegister = createAsyncThunk(\"Cart\", async cart => {\n  try {\n    const resposes = await Promise.all(cart.map(element => {\n      arr.push(axios.post(\"/api/orders\", element));\n    }));\n    return resposes;\n  } catch (err) {\n    console.log(err);\n  }\n});\n/*   const loginUser = createAsyncThunk(\"LOGIN_USER\", async () => {\n    try {\n        const promiseArray = [ axios.get(\"/ruta1\"), axios.get(\"/ruta2\"), axios.get(\"/ruta3\") ]\n        const responses = await Promise.all(promiseArray)\n        const [res1, res2, res3] = responses\n        return {res1, res2, res3}\n    } catch (error) {\n        console.log(error)\n    }\n})\n*/\n\nconst cartReducer = createReducer([], {\n  [cartRegister.fulfilled]: (state, action) => action.payload\n});\nexport default cartReducer;","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/E-commerce/futurum/src/store/cart.js"],"names":["createReducer","createAsyncThunk","axios","cartRegister","cart","resposes","Promise","all","map","element","arr","push","post","err","console","log","cartReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAAUA,aAAV,EAAyBC,gBAAzB,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,MAAD,EAAS,MAAMG,IAAN,IAAe;AAChE,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAASC,OAAO,IAAI;AACnDC,MAAAA,GAAG,CAACC,IAAJ,CAAUT,KAAK,CACZU,IADO,CACF,aADE,EACaH,OADb,CAAV;AAEF,KAHiC,CAAZ,CAAvB;AAIC,WAAOJ,QAAP;AACJ,GAND,CAOF,OAAOQ,GAAP,EAAW;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAGA,CAbyC,CAArC;AAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,WAAW,GAAGhB,aAAa,CAAC,EAAD,EAAK;AACpC,GAACG,YAAY,CAACc,SAAd,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADhB,CAAL,CAAjC;AAIA,eAAeJ,WAAf","sourcesContent":["import {  createReducer, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const cartRegister = createAsyncThunk(\"Cart\", async(cart) => {\n    try{\n        const resposes = await Promise.all(cart.map(element => {\n            arr.push( axios\n              .post(\"/api/orders\", element))   \n         }))\n         return resposes\n    }\n  catch (err){\n      console.log(err)\n  }\n\n\n  });\n/*   const loginUser = createAsyncThunk(\"LOGIN_USER\", async () => {\n    try {\n        const promiseArray = [ axios.get(\"/ruta1\"), axios.get(\"/ruta2\"), axios.get(\"/ruta3\") ]\n        const responses = await Promise.all(promiseArray)\n        const [res1, res2, res3] = responses\n        return {res1, res2, res3}\n    } catch (error) {\n        console.log(error)\n    }\n})\n*/\n\nconst cartReducer = createReducer([], {\n  [cartRegister.fulfilled]: (state, action) => action.payload\n}); \n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}