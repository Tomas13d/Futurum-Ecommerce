{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport userReducer, { getAllCart } from \"./users\";\nimport setProducts from \"./products\";\nimport cartReducer from \"./in-cartCourses\";\nimport singleCategoryReducer from \"./singleCategory\";\nimport categoriesReducer from \"./categories\";\nconst store = configureStore({\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  //middleware para -->\n  //que me loggee cada actualización//\n  reducer: {\n    user: userReducer,\n    products: setProducts,\n    cart: cartReducer,\n    category: singleCategoryReducer,\n    categories: categoriesReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/E-commerce/futurum/src/store/index.js"],"names":["configureStore","logger","userReducer","getAllCart","setProducts","cartReducer","singleCategoryReducer","categoriesReducer","store","middleware","getDefaultMiddleware","concat","reducer","user","products","cart","category","categories"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,IAAsBC,UAAtB,QAAwC,SAAxC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,qBAAP,MAAkC,kBAAlC;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AAEA,MAAMC,KAAK,GAAGR,cAAc,CAAC;AAC3BS,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BV,MAA9B,CADX;AACkD;AAC7E;AACAW,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEX,WADC;AAEPY,IAAAA,QAAQ,EAAEV,WAFH;AAGPW,IAAAA,IAAI,EAAEV,WAHC;AAIPW,IAAAA,QAAQ,EAAEV,qBAJH;AAKPW,IAAAA,UAAU,EAAEV;AALL;AAHkB,CAAD,CAA5B;AAYA,eAAeC,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport userReducer, { getAllCart } from \"./users\";\nimport setProducts from \"./products\";\nimport cartReducer from \"./in-cartCourses\";\nimport singleCategoryReducer from \"./singleCategory\";\nimport categoriesReducer from \"./categories\";\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger), //middleware para -->\n  //que me loggee cada actualización//\n  reducer: {\n    user: userReducer,\n    products: setProducts,\n    cart: cartReducer,\n    category: singleCategoryReducer,\n    categories: categoriesReducer,\n  },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}