{"ast":null,"code":"import { createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const sendReview = createAsyncThunk(\"SET_REVIEW\", review => {\n  return axios.post(\"/api/reviews/new\", review).then(res => res.data);\n});\nexport const getReviewsfromProduct = createAsyncThunk(\"GET_ALLREVIEWS\", id => {\n  return axios.get(`/api/reviews/${id}`, review).then(res => res.data);\n});\nconst reviewReducer = createReducer([], {\n  [sendReview.fulfilled]: (state, action) => action.payload,\n  [getReviewsfromProduct.fulfilled]: (state, action) => action.payload\n});\nexport default reviewReducer;","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/E-commerce/futurum/src/store/review.js"],"names":["createAsyncThunk","createReducer","axios","sendReview","review","post","then","res","data","getReviewsfromProduct","id","get","reviewReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,YAAD,EAAgBI,MAAD,IAAY;AACnE,SAAOF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BD,MAA/B,EAAuCE,IAAvC,CAA6CC,GAAD,IAASA,GAAG,CAACC,IAAzD,CAAP;AACD,CAFyC,CAAnC;AAKP,OAAO,MAAMC,qBAAqB,GAAET,gBAAgB,CAAC,gBAAD,EAAoBU,EAAD,IAAQ;AAC7E,SAAOR,KAAK,CAACS,GAAN,CAAW,gBAAeD,EAAG,EAA7B,EAAgCN,MAAhC,EAAwCE,IAAxC,CAA8CC,GAAD,IAASA,GAAG,CAACC,IAA1D,CAAP;AACD,CAFmD,CAA7C;AAKP,MAAMI,aAAa,GAAGX,aAAa,CAAC,EAAD,EAAK;AACtC,GAACE,UAAU,CAACU,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADZ;AAEtC,GAACP,qBAAqB,CAACI,SAAvB,GAAmC,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAFvB,CAAL,CAAnC;AAKA,eAAeJ,aAAf","sourcesContent":["import { createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const sendReview = createAsyncThunk(\"SET_REVIEW\", (review) => {\n  return axios.post(\"/api/reviews/new\", review).then((res) => res.data);\n});\n\n\nexport const getReviewsfromProduct= createAsyncThunk(\"GET_ALLREVIEWS\", (id) => {\n  return axios.get(`/api/reviews/${id}`, review).then((res) => res.data);\n});\n\n\nconst reviewReducer = createReducer([], {\n  [sendReview.fulfilled]: (state, action) => action.payload,\n  [getReviewsfromProduct.fulfilled]: (state, action) => action.payload,\n});\n\nexport default reviewReducer;"]},"metadata":{},"sourceType":"module"}