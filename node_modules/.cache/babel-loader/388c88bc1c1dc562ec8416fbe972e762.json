{"ast":null,"code":"import axios from \"axios\";\nimport { createReducer, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nexport const getProducts = createAsyncThunk(\"getProducts\", () => {\n  return axios.get(\"/api/product\").then(res => res.data);\n});\nexport const getCategoryProd = createAsyncThunk(\"CATEGORY_PRODUCTS\", id => {\n  return axios.get(`/api/product/categories/${id}`).then(res => res.data);\n});\nconst setProducts = createReducer([], {\n  [getProducts.fulfilled]: (state, action) => action.payload,\n  [getCategoryProd.fulfilled]: (state, action) => action.payload\n});\nexport default setProducts;","map":{"version":3,"sources":["/home/tomas/Escritorio/Plataforma5/Bootcamp/Integrador/E-commerce/futurum/src/store/products.js"],"names":["axios","createReducer","createAsyncThunk","createAction","getProducts","get","then","res","data","getCategoryProd","id","setProducts","fulfilled","state","action","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,YAA1C,QAA8D,kBAA9D;AAGA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,EAAgB,MAAM;AAC/D,SAAOF,KAAK,CAACK,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAAgCC,GAAD,IAASA,GAAG,CAACC,IAA5C,CAAP;AACD,CAF0C,CAApC;AAIP,OAAO,MAAMC,eAAe,GAAGP,gBAAgB,CAAC,mBAAD,EAAuBQ,EAAD,IAAQ;AAC3E,SAAOV,KAAK,CAACK,GAAN,CAAW,2BAA0BK,EAAG,EAAxC,EAA2CJ,IAA3C,CAAiDC,GAAD,IAASA,GAAG,CAACC,IAA7D,CAAP;AACD,CAF8C,CAAxC;AAIP,MAAMG,WAAW,GAAGV,aAAa,CAAC,EAAD,EAAK;AACpC,GAACG,WAAW,CAACQ,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADf;AAEpC,GAACN,eAAe,CAACG,SAAjB,GAA6B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAFnB,CAAL,CAAjC;AAMA,eAAeJ,WAAf","sourcesContent":["import axios from \"axios\";\nimport { createReducer, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\n\nexport const getProducts = createAsyncThunk(\"getProducts\", () => {\n  return axios.get(\"/api/product\").then((res) => res.data);\n});\n\nexport const getCategoryProd = createAsyncThunk(\"CATEGORY_PRODUCTS\", (id) => {\n  return axios.get(`/api/product/categories/${id}`).then((res) => res.data);\n});\n\nconst setProducts = createReducer([], {\n  [getProducts.fulfilled]: (state, action) => action.payload,\n  [getCategoryProd.fulfilled]: (state, action) => action.payload,\n\n});\n\nexport default setProducts;"]},"metadata":{},"sourceType":"module"}